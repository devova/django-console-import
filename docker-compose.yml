version: "1.0"

volumes:
  postgres: {}

x-app-base-environment: &app-base-environment
  DEBUG: True
  DB__USER: "${DB__USER}"
  DB__PASSWORD: "${DB__PASSWORD}"
  DB__HOST: postgres
  DB__PORT: 5432
  DB__NAME: "${DB__NAME}"

x-app: &app
  build: .
  environment: *app-base-environment
  volumes:
    - ./src:/app

services:
  postgres:
    image: "postgres:bullseye"
    restart: always
    ports: [ "${DB__PORT}:5432" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "${DB_NAME}" ]
      interval: 3s
      timeout: 2s
      retries: 12
    environment:
      POSTGRES_DB: "${DB__NAME}"
      POSTGRES_PASSWORD: "${DB__PASSWORD}"
      POSTGRES_USER: "${DB__USER}"
    volumes:
      - postgres:/var/lib/postgresql/data

  migrate:
    <<: *app
    command: "python manage.py migrate"
    depends_on:
      postgres:
        condition: service_healthy

  collectstatic:
    <<: *app
    command: "python manage.py collectstatic --noinput"

  createsuperuser:
    <<: *app
    command: "python manage.py createsuperuser --email admin@example.com --noinput"
    environment:
      <<: *app-base-environment
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: admin
    depends_on:
      migrate:
        condition: service_completed_successfully

  api:
    ports: [ "${API_PORT}:8000" ]
    <<: *app
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      collectstatic:
        condition: service_completed_successfully
